plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

jar {
    archiveFileName = 'your-project-name.jar'
    manifest {
        attributes 'Main-Class': 'comrades.ComradesApplication'
    }
    from sourceSets.main.output
}

sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.2.5'
    implementation 'org.json:json:20220924'
    implementation 'org.passay:passay:1.6.1'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13.3'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

configurations {
    externalDependencies
}

dependencies {
    externalDependencies files('lib/pw-swift-core-VERSION.jar')
}

sourceSets {
    main {
        compileClasspath += configurations.externalDependencies
        runtimeClasspath += configurations.externalDependencies
    }

}